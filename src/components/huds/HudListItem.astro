---
import { interpolateSpectral } from "d3-scale-chromatic";

import { getMaxHype } from "@ssg/huds";

const {
  hud,
  expanded = false,
  carousel = false,
  hype = undefined,
} = Astro.props;

const MAX_HYPE = await getMaxHype();

function expOut(t) {
  if (t >= 1.0) return 1.0;
  return 1.0 - Math.pow(2.0, -10.0 * t);
}

function easeIn(t) {
  return Math.pow(t, 1.1);
}

function getHype() {
  return hype / MAX_HYPE;
}

function getHypeGrad() {
  return 1.0 - expOut(getHype());
}
---

<style>
  .card-img-top {
    aspect-ratio: 16 / 9;
    background-position: center;
    background-size: contain;
    background-repeat: no-repeat;
    background-color: #151515;
  }

  .btn-outline-secondary {
    --bs-btn-padding-y: 0;

    color: #b2dfdb;
    box-shadow: none;
    border: none;
    z-index: 2;
  }

  .inline-author-icon {
    height: 1.2rem;
    vertical-align: text-top;
  }

  .btn-outline-secondary:hover {
    color: var(--bs-btn-hover-color);
  }
</style>

<div class="card text-start">
  {
    (carousel &&
      hud.resourceUrls.filter((resource) => resource.endsWith("webp")).length >
        1 && (
        <div class="card-img-top">
          <div class="carousel slide carousel-fade h-100">
            <div class="carousel-inner h-100">
              {hud.resourceUrls
                .filter((resource) => resource.endsWith("webp"))
                .map((resource, index) => (
                  <div
                    class={`carousel-item h-100 ratio ratio-16x9 ${
                      index == 0 ? "active" : ""
                    }`}
                    data-bs-interval={index == 0 ? "400" : ""}
                  >
                    <img
                      loading="lazy"
                      src={resource}
                      class="object-fit-contain"
                      alt={`${hud.resources[index]}`}
                      crossorigin=""
                    />
                  </div>
                ))}
            </div>
          </div>
        </div>
      )) || (
      <div
        class="card-img-top"
        style={`background-image: url('${hud.bannerUrl}')`}
      />
    )
  }
  <div class="card-body pb-2">
    <h5 class="card-title">
      {hud.name}
      {
        hud.outdated && (
          <small
            class="d-inline-block position-relative text-danger"
            style="z-index: 2"
            data-bs-toggle="tooltip"
            data-bs-title="Incompatible"
          >
            &nbsp;
            <span class="fas fa-circle-exclamation fa-fw" />
          </small>
        )
      }
      {
        hud.prerelease && (
          <small
            class="d-inline-block position-relative text-warning"
            style="z-index: 2"
            data-bs-toggle="tooltip"
            data-bs-title="Preview"
          >
            &nbsp;
            <span class="fas fa-flask fa-fw" />
          </small>
        )
      }
    </h5>
    <h6 class="card-subtitle mb-2 text-muted">
      {
        hud.ghAuthor && (
          <img
            class="inline-author-icon rounded-circle"
            src={`https://avatars.githubusercontent.com/${hud.ghAuthor}`}
            alt="i"
            crossorigin=""
          />
        )
      }
      {hud.author}
    </h6>
    <a href={`/huds/page/${hud.id}/`} class="stretched-link"></a>
  </div>
  {
    expanded && (
      <div class="card-footer d-flex justify-content-between">
        <span class="text-muted">
          Last updated{" "}
          <strong>
            {hud.publishDate.toLocaleDateString("en-us", {
              year: "numeric",
              month: "short",
              day: "numeric",
            })}
          </strong>
        </span>
        {hype !== undefined && (
          <span
            style={{
              color: interpolateSpectral(getHypeGrad()),
              textShadow: `0 0 ${easeIn(getHype()) * 16}px ${interpolateSpectral(0.15).replaceAll(",", " ").replaceAll(")", "")} / ${easeIn(getHype())})`,
            }}
          >
            <strong>{hype}</strong> <span class="fas fa-fire-flame-curved" />{" "}
            Hype
          </span>
        )}
      </div>
    )
  }
</div>
